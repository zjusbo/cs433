<?xml version="1.0" encoding="UTF-8"?>
<project>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.xsocket</groupId>
	<artifactId>xSocket</artifactId>
	<name>xSocket</name>
	<version>2.0-alpha-1</version>
	<description>xSocket</description>
	<url>http://www.xsocket.org</url>
	<developers>
		<developer>
			<id>grro</id>
			<email>grro@xsocket.org</email>
		</developer>
	</developers>
	<licenses>
		<license>
			<name>GNU Lesser General Public License</name>
			<url>http://www.gnu.org/licenses/lgpl-2.1.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<connection>
			scm:svn:https://svn.sourceforge.net/svnroot/xsocket
		</connection>
	</scm>


	<build>
		<plugins>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<configuration>
							<tasks>
								<!-- create a version file which will be used at runtime to get version info
									The standard java packaging version appraoch will not be used (version info within manifest file.
									This manifest-based approach doesn't work if the maven assembly module will be used   -->
								<echo
									file="src/main/resources/org/xsocket/version.txt"
									append="false">
									Implementation-Version=${project.version}
								</echo>

								<!--  copy scripts into test dir to run it within the test phase -->
								<copy
									todir="${project.build.directory}/test-classes">
									<fileset dir="src/test/groovy" />
								</copy>
								<copy
									todir="${project.build.directory}/test-classes">
									<fileset dir="src/test/jruby" />
								</copy>
								<copy
									todir="${project.build.directory}/test-classes">
									<fileset dir="src/test/jython" />
								</copy>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo.groovy</groupId>
				<artifactId>groovy-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.0</version><!-- writes manifest version info (Specification-Title, Implementation-Title, ...)  -->
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.3.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>2.0-m4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>2.0-m4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jruby</groupId>
			<artifactId>jruby-complete</artifactId>
			<version>1.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.python</groupId>
			<artifactId>jython</artifactId>
			<version>2.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>1.1-beta-2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>gr.spinellis</groupId>
			<artifactId>UmlGraph</artifactId>
			<version>4.6</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<reporting>
		<plugins>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<!--  Note about UmlGraph: You must have the Graphviz binary on your PATH,
						or the images will not be generated. For more information about Graphviz,
						please refer to http://www.graphviz.org/.  -->
					<doclet>
						gr.spinellis.umlgraph.doclet.UmlGraphDoc
					</doclet>
					<docletArtifact>
						<groupId>gr.spinellis</groupId>
						<artifactId>UmlGraph</artifactId>
						<version>4.6</version>
					</docletArtifact>
					<additionalparam>
						-inferrel -inferdep -inferreltype depend
						-inferdepvis private -quiet -hide java.lang.*
						-hide java.net.* -hide java.rmi.* -hide
						.*Exception -hide java.util.(.*)List(.*) -hide
						java.util.Timer -hide java.util.Random -hide
						java.util.Iterator -hide java.util.(.*)Map(.*)
						-hide java.util.(.*)Set(.*) -hide
						java.util.logging.* -hide java.util.Arrays -hide
						java.util.concurrent.Executors -hide
						java.util.concurrent.AtomicInteger -hide
						java.nio.ByteBuffer -hide
						java.nio.channels.SelectionKey -hide
						java.nio.channels.Selector -hide
						org.xsocket.IWorkerPool -hide
						org.xsocket.DynamicWorkerPool -hide
						org.xsocket.IoHandlerContext -hide
						org.xsocket.DataConverter -hide
						org.xsocket.stream.ILifeCycle -hide
						org.xsocket.stream.io.impl.IoSocketDispatcherPool
						-hide org.xsocket.stream.io.impl.IMemoryManager
						-hide org.xsocket.group.Address -hide
						org.xsocket.datagram.AbstractChannelBasedEndpoint
						-hide org.xsocket.datagram.AbstractEndpoint
						-hide org.xsocket.stream.AbstractConnectionPool
						-hide org.xsocket.stream.Connection -hide
						org.xsocket.DynamicWorkerPool.SizeManager -hide
						org.xsocket.stream.Acceptor -hide
						org.xsocket.stream..io.impl.IoSocketDispatcherPool
						-useimports -postfixpackage -qualify
						-nodefontsize 9 -nodefontpackagesize 7
						-outputencoding UTF-8 -link
						http://java.sun.com/j2se/1.5.0/docs/guide/javadoc/doclet/spec
						-link ttp://java.sun.com/j2se/1.5/docs/api
					</additionalparam>

					<show>public</show>
					<overview>
						${basedir}/src/main/java/overview.html
					</overview>
					<bottom>
						Copyright {inceptionYear}-{currentYear}
						xSocket.org
					</bottom>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
</project>