<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.xsocket</groupId>
	<artifactId>xSocket-group</artifactId>
	<version>0.1-SNAPSHOT</version>
	<name>xSocket group</name>
	<description>xSocket group extension</description>
	<packaging>bundle</packaging>
	<url>http://www.xsocket.org</url>
	<developers>
		<developer>
			<id>grro</id>
			<email>grro@xsocket.org</email>
		</developer>
	</developers>
	<licenses>
		<license>
			<name>GNU Lesser General Public License</name>
			<url>http://www.gnu.org/licenses/lgpl-2.1.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<connection>
			scm:svn:https://svn.sourceforge.net/svnroot/xsocket
		</connection>
	</scm>


	<build>
		<plugins>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<configuration>
							<tasks>
								<!-- create a version file which will be used at runtime to get version info
									 The standard java packaging version approach will not be used here 
									 (version info within manifest file). The manifest-based approach 
									 doesn't work if the maven assembly module will be used   -->
								<echo>generating version file</echo>
								<echo
									file="src/main/resources/org/xsocket/group/version.txt"
									append="false">
									Implementation-Version=${project.version}
								</echo>

							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptorRefs>
						<descriptorRef>
							jar-with-dependencies
						</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>1.0.0</version>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Export-Package>
						    org.xsocket.connection.http*;version=${pom.version}
						</Export-Package>
						<!--     <Private-Package>org.xsocket.stream.io.impl.*</Private-Package> -->
						<Import-Package>
							javax.*;resolution:=optional,*
						</Import-Package>
						<Bundle-RequiredExecutionEnvironment>
							J2SE-1.5
						</Bundle-RequiredExecutionEnvironment>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.xsocket</groupId>
			<artifactId>xSocket</artifactId>
			<version>2.0-beta-1</version>
		</dependency>
		<dependency> 
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>gr.spinellis</groupId>
			<artifactId>UmlGraph</artifactId>
			<version>4.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>gr.spinellis</groupId>
			<artifactId>UmlGraph</artifactId>
			<version>4.6</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<reporting>
		<plugins>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<!--  Note about UmlGraph: You must have the Graphviz binary on your PATH,
						or the images will not be generated. For more information about Graphviz,
						please refer to http://www.graphviz.org/.  -->
					<doclet>
						gr.spinellis.umlgraph.doclet.UmlGraphDoc
					</doclet>
					<docletArtifact>
						<groupId>gr.spinellis</groupId>
						<artifactId>UmlGraph</artifactId>
						<version>4.6</version>
					</docletArtifact>
					<additionalparam>
						-inferrel -inferdep -inferreltype depend
						-inferdepvis private -quiet -hide java.lang.*
						-hide org.xsocket.connection.http.AbstractHttpConnection.MultithreadedTaskProcessor -hide org.xsocket.connection.http.AbstractHttpConnection.ProtocolHandler -hide java.util.Date -hide java.text.* -hide org.xsocket.connection.http.NonBlockingBodyDataSource.HandlerCaller -hide org.xsocket.connection.spi.* -hide org.xsocket.connection.http.client.HttpClient.TransactionLog AbstractMessage -hide org.xsocket.connection.http.AbstractMessage -hide org.xsocket.connection.http.AbstractMessageHeader -hide java.nio.ByteBuffer -hide org.xsocket.connection.http.server.ServerUtils.*Info -hide org.xsocket.connection.http.client.ClientUtils.*Info java.util.concurrent.ThreadFactory -hide java.util.concurrent.ThreadFactory -hide java.util.concurrent.atomic.* -hide java.util.logging.* -hide org.xsocket.connection.http.client.HttpClientConnection.*Adapter -hide org.xsocket.connection.http.server.HttpServerConnection.*Adapter -hide java.net.* -hide .*Exception -hide java.util.(.*)List(.*) -hide java.util.(.*)Map(.*) -hide java.util.(.*)Set(.*) -hide java.util.Collections  
						-useimports -postfixpackage -qualify
						-nodefontsize 9 -nodefontpackagesize 7
						-outputencoding UTF-8 -link http://java.sun.com/j2se/1.5.0/docs/api -link http://xsocket.sourceforge.net/core/apidocs/2_0_beta_1
					</additionalparam>

					<show>protected</show>
					<overview>
						${basedir}/src/main/java/overview.html
					</overview>
					<bottom>
						Copyright {inceptionYear}-{currentYear}
						xSocket.org
					</bottom>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
</project>