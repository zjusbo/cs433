<?xml version="1.0" encoding="UTF-8"?>
<project>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.xsocket</groupId>
	<artifactId>xsocket-cometd</artifactId>
	<version>0.1</version>
	<description></description>

	<developers>
		<developer>
			<id>grro</id>
			<email>grro@xsocket.org</email>
		</developer>
	</developers>
	<licenses> 
		<license>
			<name>GNU Lesser General Public License</name>
			<url>http://www.gnu.org/licenses/lgpl-2.1.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<connection>
			scm:svn:https://svn.sourceforge.net/svnroot/xsocket
		</connection>
	</scm>

	<distributionManagement>
		<repository>
			<id>ftp-repository</id>
			<url>ftp://localhost/upload</url>
		</repository>
	</distributionManagement>

	<build>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>1.0-alpha-6</version>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<configuration>
							<tasks>
								<!-- create a version file which will be used at runtime to get version info
									The standard java packaging version approach will not be used here 
									(version info within manifest file). The manifest-based approach 
									doesn't work if the maven assembly module will be used   -->
								<echo>generating version file</echo>
								<echo
									file="src/main/resources/org/xsocket/bayeux/http/version.txt"
									append="false">
									Implementation-Version=${project.version}
								</echo>

								<echo file="src/main/java/overview.html"
									append="false">

									&lt;!DOCTYPE HTML PUBLIC
									"-//W3C//DTD HTML 3.2 Final//EN"&gt;
									&lt;html&gt; &lt;head&gt;

									&lt;/head&gt;

									&lt;body bgcolor="white"&gt;
									&lt;b&gt; xSocket comet
									(${project.version}) &lt;/b&gt;
									&lt;br/&gt; the xSocket comet
									extension supports writing comet
									network applications&lt;/body&gt;
									&lt;/html&gt;
								</echo>

							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptorRefs>
						<descriptorRef>
							jar-with-dependencies
						</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.xsocket</groupId>
			<artifactId>xSocket-http</artifactId>
			<version>2.0-beta-2</version>
		</dependency>
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.2.2</version>
			<classifier>jdk15</classifier>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>cometd-api</artifactId>
			<version>7.0.0pre1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<version>7.0.0pre1</version>
			<artifactId>cometd-bayeux</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<version>7.0.0pre1</version>
			<artifactId>bayeux-client</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<version>7.0.0pre1</version>
			<artifactId>jetty</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>gr.spinellis</groupId>
			<artifactId>UmlGraph</artifactId>
			<version>4.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>gr.spinellis</groupId>
			<artifactId>UmlGraph</artifactId>
			<version>4.6</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<reporting>
		<plugins>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<!--  Note about UmlGraph: You must have the Graphviz binary on your PATH,
						or the images will not be generated. For more information about Graphviz,
						please refer to http://www.graphviz.org/.  -->
					<doclet>
						gr.spinellis.umlgraph.doclet.UmlGraphDoc
					</doclet>
					<docletArtifact>
						<groupId>gr.spinellis</groupId>
						<artifactId>UmlGraph</artifactId>
						<version>4.6</version>
					</docletArtifact>
					<additionalparam>
						-inferrel -inferdep -inferreltype depend
						-inferdepvis private -quiet -useimports
						-postfixpackage -qualify -nodefontsize 9
						-nodefontpackagesize 7 -outputencoding UTF-8
						-link http://java.sun.com/j2se/1.5.0/docs/api
						-hide java.io.LineNumberReader
					</additionalparam>

					<show>protected</show>
					<overview>
						${basedir}/src/main/java/overview.html
					</overview>

					<bottom>
						Copyright {inceptionYear}-{currentYear}
						xSocket.org
					</bottom>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
</project>